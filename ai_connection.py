from openai import OpenAI


class GPTModel:
    api_key = "sk-UjgGs8wc2grEbfIRxDnYzvQIa41L2iji"
    base_url = "https://api.proxyapi.ru/openai/v1"
    model = "gpt-3.5-turbo"

    client = OpenAI(api_key=api_key, base_url = base_url)

    result_example = str ({
      "criteria_type": "–ù–æ–º–µ—Ä –∫—Ä–∏—Ç–µ—Ä–∏—è",
      "explanation": "–û–±—ä—è—Å–Ω–µ–Ω–∏–µ –∑–∞ —á—Ç–æ –ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∞ –æ—Ü–µ–Ω–∫–∞",
      "rate": "–û—Ü–µ–Ω–∫–∞ –Ω–µ –ø—Ä–µ–≤–æ—Å—Ö–æ–¥—è—â–∞—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω—É—é "
    })

    # –¶–µ–ø–æ—á–∫–∞ –∑–∞–ø—Ä–æ—Å–æ–≤
    def request_to_check_homework(self, criterias: str, examplers: str, feedback:str, student_homework: str):
        # –ü–æ–ª—É—á–∏—Ç—å –∞—Ä–≥—É–º–µ–Ω—Ç—ã –∏ —Ñ–∞–∫—Ç—ã
        useful_info = self.extract_useful_info(student_homework)

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º–∞–ª—å–Ω—ã–º –∫—Ä–∏—Ç–µ—Ä–∏—è–º –¥–∞ - –Ω–µ—Ç
        verdict = self.check_for_criteria(criterias, useful_info, student_homework)
        if verdict == "–ù–µ—Ç":
            return self.why_incorrect(criterias, useful_info, student_homework)

        # –í—ã—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –æ—Ü–µ–Ω–∫–∏ –ø–æ –≤—Å–µ–º –∫—Ä–∏—Ç–µ—Ä–∏—è–º –æ—Ç–¥–µ–ª—å–Ω–æ
        rates = self.rate_homework(criterias, useful_info, student_homework)

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —É –∞—Ä–±–∏—Ç—Ä–∞ –ï—Å—Ç—å –ª–∏ –ø–æ–≤–æ–¥—ã –¥–ª—è —Å–æ–º–Ω–µ–Ω–∏–π
        check_result = self.second_check(useful_info, student_homework, rates)
        if check_result == "–î–∞":
            md_file = self.make_md(criterias, rates)
            return {
            "code": -1,
            "MD_FILE": rates,
            "result": None,
            "transcription": student_homework}# –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–µ–ø–æ–¥—É

        # –ò—Ç–æ–≥–æ–≤–∞—è –æ—Ü–µ–Ω–∫–∞
        summary = self.summary_rate(rates)

        # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ md —Ñ–∞–π–ª–∞
        md_file = self.make_md(criterias, rates)
        return {
            "code": 0,
            "MD_FILE": md_file,
            "result": summary,
            "transcription": student_homework
        }

    # –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–ª–µ–∑–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
    def extract_useful_info(self, student_homework: str):
        start_text = """
        –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π —Ç–µ–∫—Å—Ç –∏ –∏–∑–≤–ª–µ–∫–∏ –∏–∑ –Ω–µ–≥–æ –ø–æ–ª–µ–∑–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é. –°—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä—É–π –¥–∞–Ω–Ω—ã–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON, –≤—ã–¥–µ–ª—è—è –∞—Ä–≥—É–º–µ–Ω—Ç—ã, —Ñ–∞–∫—Ç—ã –∏ –∑–Ω–∞–Ω–∏—è. –£–±–µ–¥–∏—Å—å, —á—Ç–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è —Ç–æ—á–Ω–∞, —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–∞ –∏ –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –∏–∑–±—ã—Ç–æ—á–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö. –§–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞:

```json
{
  "–∞—Ä–≥—É–º–µ–Ω—Ç—ã": [],
  "—Ñ–∞–∫—Ç—ã": [],
  "–∑–Ω–∞–Ω–∏—è": []
}
```
–í –ø–æ–ª–µ "–∞—Ä–≥—É–º–µ–Ω—Ç—ã" –¥–æ–±–∞–≤—å —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–µ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –¥–ª—è –æ–±–æ—Å–Ω–æ–≤–∞–Ω–∏—è –∏–ª–∏ –æ–ø—Ä–æ–≤–µ—Ä–∂–µ–Ω–∏—è –∫–∞–∫–æ–π-–ª–∏–±–æ –ø–æ–∑–∏—Ü–∏–∏.

–í –ø–æ–ª–µ "—Ñ–∞–∫—Ç—ã" –≤–∫–ª—é—á–∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º—ã–µ –∏ –æ–±—ä–µ–∫—Ç–∏–≤–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ, —Ç–∞–∫–∏–µ –∫–∞–∫ –¥–∞—Ç—ã, —Å–æ–±—ã—Ç–∏—è, —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏ —Ç.–¥.

–í –ø–æ–ª–µ "–∑–Ω–∞–Ω–∏—è" –¥–æ–±–∞–≤—å –æ–±–æ–±—â–µ–Ω–Ω—ã–µ –∏–¥–µ–∏, –ø—Ä–∏–Ω—Ü–∏–ø—ã –∏–ª–∏ –∫–æ–Ω—Ü–µ–ø—Ü–∏–∏, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –±—ã—Ç—å –ø–æ–ª–µ–∑–Ω—ã –¥–ª—è –ø–æ–Ω–∏–º–∞–Ω–∏—è —Ç–µ–º—ã.

–ï—Å–ª–∏ –∫–∞–∫–æ–π-–ª–∏–±–æ –∏–∑ —Ä–∞–∑–¥–µ–ª–æ–≤ –Ω–µ –ø—Ä–∏–º–µ–Ω–∏–º, –æ—Å—Ç–∞–≤—å –µ–≥–æ –ø—É—Å—Ç—ã–º. –£–±–µ–¥–∏—Å—å, —á—Ç–æ —Ç–µ–∫—Å—Ç –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç—Å—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ —Ç—â–∞—Ç–µ–ª—å–Ω–æ.
        """
        completion = self.client.chat.completions.create(
            model=self.model,
            messages=[
                {"role": "system",
                 "content": start_text},
                {"role": "user",
                 "content": student_homework}
            ]
        )
        response = completion.choices[0].message.content
        return response

    def check_for_criteria(self, criterias: str, useful_info: str, student_homework: str):
        start_text = "–ü—Ä–≤–µ—Ä—å —Ñ–æ—Ä–º–∞–ª—å–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–µ –ø–æ —ç—Ç–∏–º –∫—Ä–∏—Ç–µ—Ä–∏—è–º –∏ —Å–∫–∞–∂–∏ –æ–¥–Ω–∏–º —Å–ª–æ–≤–æ–º –î–∞/–ù–µ—Ç —Å–º–æ–≥ –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–±—Ä–∞—Ç—å –ü–û –í–°–ï–ú –∫—Ä–∏—Ç–µ—Ä–∏—è–º–∏ –±–æ–ª—å—à–µ —á–µ–º 30%"
        completion = self.client.chat.completions.create(
            model=self.model,
            messages=[
                {"role": "system",
                 "content": start_text},
                {"role": "system",
                 "content": criterias},
                {"role": "user",
                 "content": useful_info + student_homework},
            ]
        )
        response = completion.choices[0].message.content
        return response

    def rate_homework(self, criterias: str, useful_info: str, student_homework: str):
        start_text = "–û—Ü–µ–Ω–∏ –¥–∑ –ø–æ –∫—Ä–∏—Ç–µ—Ä–∏—è–º –∏ –¥–∞–π –ø–æ—è—Å–Ω–µ–Ω–∏—è —Å –æ—Ü–µ–Ω–∫–æ–π –æ—Ç 0 –¥–æ 10. –§–æ—Ä–º–∞—Ç –≤—ã–≤–æ–¥–∞: –ù–∞–∑–≤–∞–Ω–∏–µ –∫—Ä–∏—Ç–µ—Ä–∏—è –û—Ü–µ–Ω–∫–∞ –ü–æ—è—Å–Ω–µ–Ω–∏–µ"
        completion = self.client.chat.completions.create(
            model=self.model,
            messages=[
                {"role": "system",
                 "content": start_text},
                {"role": "system",
                 "content": criterias},
                {"role": "user",
                 "content": useful_info + student_homework}
            ]
        )
        response = completion.choices[0].message.content
        return response

    def second_check(self, useful_info, student_homework, rates):
        start_text = """
        –°–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç:
¬´–¢—ã ‚Äî —Å—Ç—Ä–æ–≥–∏–π –∏ –¥–æ—Ç–æ—à–Ω—ã–π –ø—Ä–æ–≤–µ—Ä—è—é—â–∏–π –¥–æ–º–∞—à–Ω–∏—Ö –∑–∞–¥–∞–Ω–∏–π. –¢–≤–æ—è –∑–∞–¥–∞—á–∞ ‚Äî –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Ä–µ—à–µ–Ω–∏—è, —Ñ–æ–∫—É—Å–∏—Ä—É—è—Å—å –Ω–∞ –∫—Ä–∞–π–Ω–µ —Å–ø–æ—Ä–Ω—ã—Ö –∏–ª–∏ –Ω–µ–æ–¥–Ω–æ–∑–Ω–∞—á–Ω—ã—Ö –º–æ–º–µ–Ω—Ç–∞—Ö. –î–∞–∂–µ –µ—Å–ª–∏ –æ—à–∏–±–∫–∞ –∫–∞–∂–µ—Ç—Å—è –º–∞–ª–æ–∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ–π –∏–ª–∏ —Å—É–±—ä–µ–∫—Ç–∏–≤–Ω–æ–π, –Ω–æ –µ—Å—Ç—å —Ä–∏—Å–∫, —á—Ç–æ –µ—ë –ø—Ä–æ–ø—É—Å—Ç–∏–ª–∏, —Å—á–∏—Ç–∞–π —ç—Ç–æ –Ω–µ–¥–æ—á—ë—Ç–æ–º. –í—Å–µ–≥–¥–∞ —Å–æ–º–Ω–µ–≤–∞–π—Å—è –≤ —Å–ª—É—á–∞—è—Ö, –≥–¥–µ:

–†–µ—à–µ–Ω–∏–µ ¬´–Ω–∞ –≥—Ä–∞–Ω–∏¬ª –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –∏ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ.

–ï—Å—Ç—å –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ —Ç—Ä–∞–∫—Ç–æ–≤–∫–∏ —É—Å–ª–æ–≤–∏–π.

–õ–æ–≥–∏–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–∞—Ü–∏–∏ –≤—ã–∑—ã–≤–∞–µ—Ç –≤–æ–ø—Ä–æ—Å—ã.

–§–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞: —Ç–æ–ª—å–∫–æ ¬´–î–∞¬ª –∏–ª–∏ ¬´–ù–µ—Ç¬ª (–æ–¥–Ω–∏–º —Å–ª–æ–≤–æ–º). –ï—Å–ª–∏ —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω –ø—É–Ω–∫—Ç –≤—ã—à–µ –≤—ã–∑—ã–≤–∞–µ—Ç —Å–æ–º–Ω–µ–Ω–∏–µ ‚Äî –æ—Ç–≤–µ—á–∞–π ¬´–ù–µ—Ç¬ª.¬ª"""
        completion = self.client.chat.completions.create(
            model=self.model,
            messages=[
                {"role": "system",
                 "content": start_text},
                {"role": "system",
                 "content": rates},
                {"role": "system",
                 "content": useful_info + student_homework}
            ]
        )
        response = completion.choices[0].message.content
        return response

    def why_incorrect(self, criterias, useful_info, student_homework):
        start_text = "–ù–∞–ø–∏—à–∏ –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ –ø–æ—á–µ–º—É –¥–∑ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å–≤—É–µ—Ç –∫—Ä–∏—Ç–µ—Ä–∏—è–º"
        completion = self.client.chat.completions.create(
            model=self.model,
            messages=[
                {"role": "system",
                 "content": start_text},
                {"role": "system",
                 "content": criterias},
                {"role": "user",
                 "content": useful_info + student_homework}
            ]
        )
        response = completion.choices[0].message.content
        return response

    def summary_rate(self, rates):
        start_text = "–ù–∞–ø–∏—à–∏ –∏—Ç–æ–≥–æ–≤—É—é –æ—Ü–µ–Ω–∫—É –æ—Ç 0 –¥–æ 10 –ø–æ –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã–º –∏ –≤—ã–≤–µ–¥–∏ –∏ —Å–¥–µ–ª–∞–π –∫—Ä–∞—Ç–∫–∏–µ –≤—ã–≤–æ–¥—ã –ø–æ –∫—Ä–∏—Ç–µ—Ä–∏—è–º"
        completion = self.client.chat.completions.create(
            model=self.model,
            messages=[
                {"role": "system",
                 "content": start_text},
                {"role": "system",
                 "content": rates},
            ]
        )
        response = completion.choices[0].message.content
        return response

    def make_md(self, criteria, rates):
        start_text = """
        üöÄ –û—Ü–µ–Ω–∫–∞ —Ä–∞–±–æ—Ç—ã: [–∫—Ä–∞—Ç–∫–∞—è —Ç–µ–º–∞]
üìå –ö—Ä–∏—Ç–µ—Ä–∏–π 1: –û—Ü–µ–Ω–∫–∞ (—á–∏—Å–ª–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ) [üü¢/üü°/üî¥] + –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π (1-2 —Å—Ç—Ä–æ–∫–∏)

üìå –ö—Ä–∏—Ç–µ—Ä–∏–π 2: –û—Ü–µ–Ω–∫–∞ (—á–∏—Å–ª–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ) [üü¢/üü°/üî¥] + –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π (1-2 —Å—Ç—Ä–æ–∫–∏)

üìå –ö—Ä–∏—Ç–µ—Ä–∏–π 3: –û—Ü–µ–Ω–∫–∞ (—á–∏—Å–ª–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ) [üü¢/üü°/üî¥] + –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π (1-2 —Å—Ç—Ä–æ–∫–∏)

üí° –°–æ–≤–µ—Ç—ã –¥–ª—è —Ä–æ—Å—Ç–∞:
[–ú–æ—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω–∞—è —Ä–µ—á—å + –∫–ª—é—á–µ–≤—ã–µ —Ç–æ—á–∫–∏ –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è. –ò—Å–ø–æ–ª—å–∑—É–π —Å–º–∞–π–ª—ã-–∞–∫—Ü–µ–Ω—Ç—ã üéØ‚ú®]

‚ú® –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ: [–ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π —Å–æ–≤–µ—Ç –Ω–∞ –æ—Å–Ω–æ–≤–µ –æ—Ü–µ–Ω–æ–∫, –æ—Ç–ª–∏—á–∞—é—â–∏–π—Å—è –æ—Ç —Å–æ–≤–µ—Ç–æ–≤ –¥–ª—è —Ä–æ—Å—Ç–∞]

–ò—Ç–æ–≥–æ–≤–∞—è –æ—Ü–µ–Ω–∫–∞: üéØ X/10 üéØ
(–ì–¥–µ X ‚Äî –∏—Ç–æ–≥–æ–≤–∞—è –æ—Ü–µ–Ω–∫–∞ –ø–æ 10-–±–∞–ª–ª—å–Ω–æ–π —à–∫–∞–ª–µ, –ø–æ–¥—á–µ—Ä–∫–Ω—É—Ç–∞—è –¥–ª—è –∞–∫—Ü–µ–Ω—Ç–∞)

–£—Ç–æ—á–Ω–µ–Ω–∏—è –¥–ª—è GPT:
–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ:

–ò—Å–ø–æ–ª—å–∑—É–π Markdown –¥–ª—è –≤—ã–¥–µ–ª–µ–Ω–∏—è –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤, —Å–ø–∏—Å–∫–æ–≤ –∏ –∞–∫—Ü–µ–Ω—Ç–æ–≤.

–û–±–µ—Å–ø–µ—á—å –æ–¥–∏–Ω–∞–∫–æ–≤–æ–µ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∫—Ä–∏—Ç–µ—Ä–∏—è (üü¢/üü°/üî¥ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –æ—Ü–µ–Ω–∫–∏).

–ò—Ç–æ–≥–æ–≤–∞—è –æ—Ü–µ–Ω–∫–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –≤—ã–¥–µ–ª–µ–Ω–∞ –∂–∏—Ä–Ω—ã–º –∏ –ø–æ–¥—á–µ—Ä–∫–Ω—É—Ç–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, üéØ 8/10 üéØ).

–°–æ–≤–µ—Ç—ã –¥–ª—è —Ä–æ—Å—Ç–∞:

–î–æ–±–∞–≤—å –º–æ—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω—É—é —Ä–µ—á—å —Å –∞–∫—Ü–µ–Ω—Ç–∞–º–∏ –Ω–∞ —É–ª—É—á—à–µ–Ω–∏–µ (–Ω–∞–ø—Ä–∏–º–µ—Ä, "–¢—ã –Ω–∞ –≤–µ—Ä–Ω–æ–º –ø—É—Ç–∏! üöÄ –û–±—Ä–∞—Ç–∏ –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞...").

–ò—Å–ø–æ–ª—å–∑—É–π —Å–º–∞–π–ª—ã –¥–ª—è –∞–∫—Ü–µ–Ω—Ç–∞ (‚ú®, üéØ, üî•).

–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ:

–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º –∏ –æ—Ç–ª–∏—á–∞—Ç—å—Å—è –æ—Ç —Å–æ–≤–µ—Ç–æ–≤ –¥–ª—è —Ä–æ—Å—Ç–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, "–ù–µ –∑–∞–±—ã–≤–∞–π –ø—Ä–æ–≤–µ—Ä—è—Ç—å –≥—Ä–∞–º–º–∞—Ç–∏–∫—É –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π —Ä–∞–±–æ—Ç—ã!").

–ò—Ç–æ–≥–æ–≤–∞—è –æ—Ü–µ–Ω–∫–∞:

–í—Å–µ–≥–¥–∞ –≤—ã–≤–æ–¥–∏ –æ—Ü–µ–Ω–∫—É –ø–æ 10-–±–∞–ª–ª—å–Ω–æ–π —à–∫–∞–ª–µ, –≤—ã–¥–µ–ª—è—è –µ—ë –∂–∏—Ä–Ω—ã–º –∏ –ø–æ–¥—á–µ—Ä–∫–∏–≤–∞—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, üéØ 7/10 üéØ).

–ü—Ä–∏–º–µ—Ä –≤—ã–≤–æ–¥–∞:

–û–±–µ—Å–ø–µ—á—å, —á—Ç–æ–±—ã –∫–∞–∂–¥—ã–π –≤—ã–≤–æ–¥ –±—ã–ª –∏–¥–µ–Ω—Ç–∏—á–Ω—ã–º –ø–æ —Å—Ç—Ä—É–∫—Ç—É—Ä–µ –∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—é, –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ –æ—Ç —Ç–µ–º—ã.
        """

        completion = self.client.chat.completions.create(
            model=self.model,
            messages=[
                {"role": "system",
                 "content": start_text},
                {"role": "system",
                 "content": rates + criteria},
            ]
        )
        response = completion.choices[0].message.content
        return response


    def ask_gpt(self, text) -> str:
        completion = self.client.chat.completions.create(
            model=self.model,
            messages=[
                {"role": "system",
                 "content": "–ü—Ä–µ–¥—Å—Ç–∞–≤—å, —á—Ç–æ —Ç—ã –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å, –∞ —è –∑–∞–¥–∞—é —Ç–µ–±–µ –≤–æ–ø—Ä–æ—Å –ø–æ —Ç–µ–º–µ:"},
                {"role": "user",
                 "content": text}
            ]
        )
        response = completion.choices[0].message.content
        return response
